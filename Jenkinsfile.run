import com.cloudbees.groovy.cps.NonCPS

pipeline {
    agent any

    stages {
        stage('Run Docker image') {
            steps {
                withCredentials([
                    [ $class: 'AmazonWebServicesCredentialsBinding',
                      credentialsId: 'aws-ci-credentials',
                      accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                      secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]
                ]) {
                    runImage()
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}

@NonCPS
def runImage() {
    def lastBuildId = Jenkins.instance.getItemByFullName('ci').getLastSuccessfulBuild().number
    sh "docker run --env AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} --env AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} ec2-instance-describer:${lastBuildNumber}"
}